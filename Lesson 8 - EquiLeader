/* https://app.codility.com/programmers/lessons/8-leader/equi_leader/ */

/* Approach 1: 和 Lesson 8 - Dominator 差不多概念
Intuition:

Time complexity:  O(n)
Space complexity: O(1)
*/

// you can use includes, for example:
// #include <algorithm>

// you can write to stdout for debugging purposes, e.g.
// cout << "this is a debug message" << endl;

int solution(vector<int> &A) {
    // write your code in C++14 (g++ 6.2.0)
    int count = 0;
    int leader = 0;
    
    for(auto a : A)
    {
        if(count == 0)
        {
            leader = a;
            ++count;
        }
        else
        {
            if(a != leader)
            {
                --count;
            }
            else
            {
                ++count;
            }
        }
    }
    if(count == 0) return 0;
    
    count = 0;
    for(auto a : A)
    {
        if(a == leader) ++count;
    }
    if(count <= A.size() / 2) return 0;
    
    int ans = 0;
    int n = A.size();
    int leftCount = 0;
    for(int i = 0; i < n; ++i)
    {
        if(A[i] == leader)
        {
            ++leftCount;
            --count;
        }
        
        if(leftCount > (i + 1) / 2 and count > (n - 1 - i) / 2) ++ans;
    }
    
    return ans;
}
